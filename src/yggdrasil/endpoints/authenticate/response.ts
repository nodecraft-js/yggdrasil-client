"use strict";

import {
    YggdrasilProfile,
    YggdrasilUser,
} from "../../types";

/**
 * The JSON object that the authentication server will return when accessing the
 * "authenticate" endpoint via `POST` request.
 * 
 * @since 0.0.1
 * @see {@link RawYggdrasilClient.authenticate|`RawYggdrasilClient#authenticate`}
 * @see {@link YggdrasilClient.authenticate|`YggdrasilClient#authenticate`}
 */
export interface AuthenticateResponse
{
    /**
     * A unique identifier for this login session.
     */
    accessToken: string;

    /**
     * The unique identifier for this Yggdrasil client.
     * 
     * @remarks
     * This token will be generated by the authentication server if none is
     * provided. Otherwise, it is identical to {@link AuthenticatePayload.clientToken|the one}
     * in the request {@link AuthenticatePayload|payload}.
     */
    clientToken: string;

    /**
     * The information of the user.
     * 
     * @remarks
     * This field will only presents if {@link AuthenticatePayload.requestUser|`requestUser`}
     * was `true` in the request {@link AuthenticatePayload|payload}.
     */
    user?: YggdrasilUser;

    /**
     * The player's profile that this session will use to play the game.
     * 
     * @remarks
     * This field will only present if a valid {@link AuthenticatePayload.agent|`agent`}
     * field was provided in the request {@link AuthenticatePayload|payload} and a
     * profile was linked with the {@link accessToken|`accessToken`}.
     */
    selectedProfile?: YggdrasilProfile;

    /**
     * A list of players profiles that can be chosen by this session to use to play
     * the game.
     * 
     * @remarks
     * This field will only present if a valid {@link AuthenticatePayload.agent|`agent`}
     * field was provided in the request {@link AuthenticatePayload|payload}.
     */
    availableProfiles?: YggdrasilProfile[];
}

export default AuthenticateResponse;
